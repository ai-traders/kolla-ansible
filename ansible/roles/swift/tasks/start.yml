---
- name: Looking up disks for Swift
  command: docker exec -t kolla_toolbox sudo -E ansible localhost
    -m find_disks
    -a "name={{ swift_devices_name }}
        match_mode={{ swift_devices_match_mode }}"
  register: swift_disk_lookup
  changed_when: "{{ swift_disk_lookup.stdout.find('localhost | SUCCESS => ') != -1 and
                    (swift_disk_lookup.stdout.split('localhost | SUCCESS => ')[1]|from_json).changed }}"
  failed_when: swift_disk_lookup.stdout.split()[2] != 'SUCCESS'
  when:
    - swiftonfile | bool == False
    - inventory_hostname in groups['swift-account-server'] or
      inventory_hostname in groups['swift-container-server'] or
      inventory_hostname in groups['swift-object-server']

- name: Reading data from variable
  set_fact:
    swift_disks: "{{ (swift_disk_lookup.stdout.split('localhost | SUCCESS => ')[1]|from_json).disks|from_json }}"
  when:
    - swiftonfile | bool == False
    - inventory_hostname in groups['swift-account-server'] or
      inventory_hostname in groups['swift-container-server'] or
      inventory_hostname in groups['swift-object-server']

- name: Mounting Swift disks
  mount:
    src: "UUID={{ item.fs_uuid }}"
    fstype: xfs
    opts: "noatime,nodiratime,nobarrier,logbufs=8"
    state: mounted
    name: "{{ swift_devices_mount_point }}/{{ item['fs_label'] }}"
  with_items: "{{ swift_disks }}"
  when:
    - swiftonfile | bool == False
    - inventory_hostname in groups['swift-account-server'] or
      inventory_hostname in groups['swift-container-server'] or
      inventory_hostname in groups['swift-object-server']

- apt_repository:
    repo: 'ppa:gluster/glusterfs-3.12'
  when:
    - swiftonfile | bool
- apt: name=glusterfs-client
  when:
    - swiftonfile | bool

- file:
    path: /mnt/glusterfs/swift_volume
    state: directory
- name: Mount glusterfs to ensure swift directory exists
  run_once: true
  shell: |
    mount -t glusterfs {{ ait_glusterfs_server0 }}:{{ ait_glusterfs_swift_volume }} /mnt/glusterfs/swift_volume
    mkdir -p /mnt/glusterfs/swift_volume/swift
    umount /mnt/glusterfs/swift_volume

- name: make swift volume mountpoint
  file:
    path: "{{ swift_devices_mount_point }}/{{ ait_glusterfs_swift_volume }}"
    state: directory

- name: Mount swift volume
  mount:
    src: "{{ ait_glusterfs_server0 }}:{{ ait_glusterfs_swift_volume }}/swift"
    fstype: glusterfs
    opts: "backupvolfile-server={{ ait_glusterfs_server1 }}:{{ ait_glusterfs_swift_volume }}/swift"
    state: mounted
    path: "{{ swift_devices_mount_point }}/{{ ait_glusterfs_swift_volume }}"
  when:
    - swiftonfile | bool

- file:
    path: /etc/services.d/swift
    state: directory
- name: Setup s6 service to mount and start swift
  template:
    src: "swift-s6.j2"
    dest: "/etc/services.d/swift/run"
    mode: 0755
  when:
    - swiftonfile | bool
    - in_docker

- name: Ensure ownership of swift directory
  shell: |
    chown -R 42445:42445 {{ swift_devices_mount_point }}/{{ ait_glusterfs_swift_volume }}

- name: Starting swift-rsyncd container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_rsyncd_image_full }}"
    name: "swift_rsyncd"
    volumes:
      - "{{ node_config_directory }}/swift-rsyncd/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-account-server'] or
        inventory_hostname in groups['swift-container-server'] or
        inventory_hostname in groups['swift-object-server']

- name: Starting swift-account-server container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    name: "swift_account_server"
    image: "{{ swift_account_image_full }}"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-account-server/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-account-server']

- name: Starting swift-account-auditor container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_account_image_full }}"
    name: "swift_account_auditor"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-account-auditor/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-account-server']

- name: Starting swift-account-replicator container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_account_image_full }}"
    name: "swift_account_replicator"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-account-replicator/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-account-server']

- name: Starting swift-account-reaper container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_account_image_full }}"
    name: "swift_account_reaper"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-account-reaper/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-account-server']

- name: Starting swift-container-server container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_container_image_full }}"
    name: "swift_container_server"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-container-server/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-container-server']

- name: Starting swift-container-auditor container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_container_image_full }}"
    name: "swift_container_auditor"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-container-auditor/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-container-server']

- name: Starting swift-container-replicator container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_container_image_full }}"
    name: "swift_container_replicator"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-container-replicator/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-container-server']

- name: Starting swift-container-updater container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_container_image_full }}"
    name: "swift_container_updater"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-container-updater/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-container-server']

- name: Starting swift-object-server container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_object_image_full }}"
    name: "swift_object_server"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-object-server/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-object-server']

- name: Starting swift-object-auditor container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_object_image_full }}"
    name: "swift_object_auditor"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-object-auditor/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-object-server']

- name: Starting swift-object-replicator container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_object_image_full }}"
    name: "swift_object_replicator"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-object-replicator/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-object-server']

- name: Starting swift-object-updater container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_object_image_full }}"
    name: "swift_object_updater"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-object-updater/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-object-server']

- name: Starting swift-object-expirer container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_object_expirer_image_full }}"
    name: "swift_object_expirer"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-object-expirer/:{{ container_config_directory }}/:ro"
      - "{{ swift_devices_mount_point }}:{{ swift_devices_mount_point }}"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-object-server']

- name: Starting swift-proxy-server container
  kolla_docker:
    action: "start_container"
    restart_policy: "{{ swift_container_restarts }}"
    common_options: "{{ docker_common_options }}"
    image: "{{ swift_proxy_server_image_full }}"
    name: "swift_proxy_server"
    volumes:
      - "{{ node_config_directory }}/swift/:/var/lib/kolla/swift/:ro"
      - "{{ node_config_directory }}/swift-proxy-server/:{{ container_config_directory }}/:ro"
      - "/etc/localtime:/etc/localtime:ro"
  when: inventory_hostname in groups['swift-proxy-server']
