---
- name: Ensuring config directories exist
  file:
    path: "{{ node_config_directory }}/{{ item.key }}"
    state: "directory"
    recurse: yes
  when:
    - item.value.enabled | bool
    - item.value.host_in_groups | bool
  with_dict: "{{ openvswitch_services }}"

- name: Copying over config.json files for services
  template:
    src: "{{ item.key }}.json.j2"
    dest: "{{ node_config_directory }}/{{ item.key }}/config.json"
  register: openvswitch_config_jsons
  when:
    - item.value.enabled | bool
    - item.value.host_in_groups | bool
  with_dict: "{{ openvswitch_services }}"
  notify:
    - "Restart {{ item.key }} container"

- name: Copying over start-ovs file for openvswitch-vswitchd
  vars:
    service: "{{ openvswitch_services['openvswitch-vswitchd'] }}"
  template:
    src: "{{ role_path }}/templates/start-ovs.j2"
    dest: "{{ node_config_directory }}/openvswitch-vswitchd/start-ovs"
  register: openvswitch_start_ovs
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  notify:
    - "Restart openvswitch-vswitchd container"

- name: Copying over start-ovsdb-server files for openvswitch-db-server
  vars:
    service: "{{ openvswitch_services['openvswitch-db-server'] }}"
  template:
    src: "{{ role_path }}/templates/start-ovsdb-server.j2"
    dest: "{{ node_config_directory }}/openvswitch-db-server/start-ovsdb-server"
  register: openvswitch_start_ovsdb_server
  when:
    - inventory_hostname in groups[service.group]
    - service.enabled | bool
  notify:
    - "Restart openvswitch-db-server container"

- name: Check openvswitch containers
  kolla_docker:
    action: "compare_container"
    common_options: "{{ docker_common_options }}"
    name: "{{ item.value.container_name }}"
    image: "{{ item.value.image }}"
    privileged: "{{ item.value.privileged | default(False) }}"
    volumes: "{{ item.value.volumes }}"
  register: check_openvswitch_containers
  when:
    - action != "config"
    - item.value.enabled | bool
    - item.value.host_in_groups | bool
  with_dict: "{{ openvswitch_services }}"
  notify:
    - "Restart {{ item.key }} container"

- name: Install move IPs script
  template:
    src: move-ips.sh.j2
    dest: "/usr/sbin/move-ips"
    mode: 0755
  when:
    - inventory_hostname in groups["network"]
      or (inventory_hostname in groups["compute"] and computes_need_external_bridge)
# For hdind docker hosts
- file:
    path: /etc/services.d/move-ips
    state: directory
    mode: 0755
  when:
    - in_docker
    - inventory_hostname in groups["network"]
      or (inventory_hostname in groups["compute"] and computes_need_external_bridge)
- name: setup move-ips s6 service
  template:
    src: move-ips-s6.j2
    dest: /etc/services.d/move-ips/run
  when:
    - in_docker
    - inventory_hostname in groups["network"]
      or (inventory_hostname in groups["compute"] and computes_need_external_bridge)
# For VM or physical hosts
- name: setup move-ips systemd service
  template:
    src: move-ips-systemd.j2
    dest: /etc/systemd/system/move-ips.service
  when:
    - not in_docker
    - inventory_hostname in groups["network"]
      or (inventory_hostname in groups["compute"] and computes_need_external_bridge)
- name: start move-ips systemd service
  systemd:
    no_block: true
    enabled: true
    state: started
    daemon_reload: yes
    name: move-ips
  when:
    - not in_docker
    - inventory_hostname in groups["network"]
      or (inventory_hostname in groups["compute"] and computes_need_external_bridge)

- name: Install routing setup script
  template:
    src: setup-routing.sh.j2
    dest: "/etc/cont-init.d/01-setup-routing"
    mode: 0755
  when:
    - in_docker
    - inventory_hostname in groups["network"]
      or (inventory_hostname in groups["compute"] and computes_need_external_bridge)
